@model WebUI.Areas.Admin.Models.StoreEditVM
@using Data.Model.Models
@using Microsoft.AspNetCore.Mvc.Localization
@using WebUI.Resources
@inject LocalizationService resources

@{
    ViewData["Title"] = "CreateStore";
}

<h4>@resources["CreateStore"]</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateStore">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="StoreCode" class="control-label"></label>
                <input asp-for="StoreCode" class="form-control" />
                <span asp-validation-for="StoreCode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StoreName" class="control-label"></label>
                <input asp-for="StoreName" class="form-control" />
                <span asp-validation-for="StoreName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ExchangeValue" class="control-label"></label>
                <input asp-for="ExchangeValue" class="form-control" />
                <span asp-validation-for="ExchangeValue" class="text-danger"></span>
            </div>
            @if (ViewBag.AvailableCities != null || ViewBag.AvailableCities.Any())
            {
                <div class="form-group">
                    <label asp-for="CityId" class="control-label"></label>
                    <br />
                    <select asp-for="CityId" class="form-control custom-select">
                        @foreach (var item in ViewBag.AvailableCities as List<City>)
                        {
                            if (item.Id == Model.CityId)
                            {
                                <option selected="selected" value="@item.Id">@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        }
                    </select>
                </div>
            }
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>
            @if (User.IsInRole("Admin"))
            {
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="IsBlocked" /> @Html.DisplayNameFor(model => model.IsBlocked)
                    </label>
                </div>
            }
            <div class="form-group">
                <input type="submit" value="@resources["Create"]" class="btn btn-outline-primary" />
            </div>
        </form>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
